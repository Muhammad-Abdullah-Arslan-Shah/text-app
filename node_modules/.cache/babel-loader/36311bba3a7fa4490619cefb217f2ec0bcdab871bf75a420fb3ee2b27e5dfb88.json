{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\React\\\\text\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport TextForm from './Components/TextForm';\nimport Navbar from './Components/Navbar';\nimport React, { useState } from 'react';\nimport Alert from './Components/Alert';\nimport about from './Components/About';\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport About from './Components/About';\n\n// problem in dark-mode\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  };\n  const toogleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode is Enabled', 'Success');\n      console.log(mode);\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Drak mode is Disabled', 'Success');\n      console.log(mode);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"Text App\",\n      mode: mode,\n      toogleMode: toogleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: alert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TextForm, {\n      showAlert: showAlert,\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"rLXVx9POVuN9w55SGbqOU1JJzx4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TextForm","Navbar","React","useState","Alert","about","BrowserRouter","Route","Routes","About","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","alert","setAlert","showAlert","message","type","msg","setTimeout","toogleMode","document","body","style","backgroundColor","console","log","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/user/Desktop/React/text/src/App.js"],"sourcesContent":["\nimport './App.css';\nimport TextForm from './Components/TextForm';\nimport Navbar from './Components/Navbar';\nimport React ,{useState} from 'react'\nimport Alert from './Components/Alert';\nimport about from './Components/About';\n\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport About from './Components/About';\n\n\n// problem in dark-mode\nfunction App() {\n  const [mode,setMode] = useState(\"light\");\n  const [alert,setAlert] = useState(null);\n\n const showAlert = (message,type)=>\n {\n  \nsetAlert(\n  {  msg:message,\n     type:type\n  }\n)\nsetTimeout(()=>{\nsetAlert(null);}\n,1000);\n}\n\n  const toogleMode=()=> {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = '#042743';\n      showAlert('Dark mode is Enabled','Success')\n      console.log(mode);\n    }\n\n    else {\n      setMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Drak mode is Disabled','Success')\n      console.log(mode);\n\n    }\n  }\n\n\n\n  return (\n    <>\n\n    <Navbar title =\"Text App\" mode = {mode}  toogleMode = {toogleMode}/>\n    <Alert alert = {alert}/>\n \n\n\n            <About/>\n          \n           <TextForm showAlert= {showAlert} mode = {mode}/>\n         \n        \n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AACA,OAAO,WAAW;AAClB,OAAOA,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,IAAGC,QAAQ,QAAO,OAAO;AACrC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AAEtC,SAASC,aAAa,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AAC/D,OAAOC,KAAK,MAAM,oBAAoB;;AAGtC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAACC,OAAO,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EACxC,MAAM,CAACe,KAAK,EAACC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMiB,SAAS,GAAGA,CAACC,OAAO,EAACC,IAAI,KAC/B;IAEDH,QAAQ,CACN;MAAGI,GAAG,EAACF,OAAO;MACXC,IAAI,EAACA;IACR,CACF,CAAC;IACDE,UAAU,CAAC,MAAI;MACfL,QAAQ,CAAC,IAAI,CAAC;IAAC,CAAC,EACf,IAAI,CAAC;EACN,CAAC;EAEC,MAAMM,UAAU,GAACA,CAAA,KAAK;IACpB,IAAIT,IAAI,KAAK,OAAO,EAAE;MACpBC,OAAO,CAAC,MAAM,CAAC;MACfS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;MAC/CT,SAAS,CAAC,sBAAsB,EAAC,SAAS,CAAC;MAC3CU,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IACnB,CAAC,MAEI;MACHC,OAAO,CAAC,OAAO,CAAC;MAChBS,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;MAC7CT,SAAS,CAAC,uBAAuB,EAAC,SAAS,CAAC;MAC5CU,OAAO,CAACC,GAAG,CAACf,IAAI,CAAC;IAEnB;EACF,CAAC;EAID,oBACEL,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBAEArB,OAAA,CAACV,MAAM;MAACgC,KAAK,EAAE,UAAU;MAACjB,IAAI,EAAIA,IAAK;MAAES,UAAU,EAAIA;IAAW;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACpE1B,OAAA,CAACP,KAAK;MAACc,KAAK,EAAIA;IAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAIhB1B,OAAA,CAACF,KAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAET1B,OAAA,CAACX,QAAQ;MAACoB,SAAS,EAAGA,SAAU;MAACJ,IAAI,EAAIA;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAGrD,CAAC;AAEP;AAACtB,EAAA,CAnDQD,GAAG;AAAAwB,EAAA,GAAHxB,GAAG;AAqDZ,eAAeA,GAAG;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}